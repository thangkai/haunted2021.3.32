{"id":32360,"assetBundleId":-1,"data":[[],"Spine\/Blend Modes\/Skeleton PMA Additive",null,["_STRAIGHT_ALPHA_INPUT","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_","SHADOWS_CUBE"],[[0,0,"Normal",0,"",0,[4,null],[0,null],[0,null],[[1,null],[1,null],[0,null]],[[1,null],[1,null],[0,null]],[15,null],[0,null],[0,null],[0,"_StencilRef"],[255,null],[255,null],[[0,null],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_STRAIGHT_ALPHA_INPUT","_"],[[["_","_STRAIGHT_ALPHA_INPUT"],1]],[[0,0,[],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _Color;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec4 in_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat0.xyz = _Color.www * _Color.xyz;\n    u_xlat0.w = _Color.w;\n    vs_COLOR0 = u_xlat0 * in_COLOR0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat10_0 * vs_COLOR0;\n    return;\n}\n\n",0,0],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nin highp vec4 in_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat0.xyz = _Color.www * _Color.xyz;\n    u_xlat0.w = _Color.w;\n    vs_COLOR0 = u_xlat0 * in_COLOR0;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_COLOR0;\nlayout(location = 0) out highp vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat16_0 * vs_COLOR0;\n    return;\n}\n\n",1,0]],[],0],[1,0,"Caster",8,"",0,[4,null],[1,null],[0,null],[[1,null],[1,null],[0,null]],[[1,null],[1,null],[0,null]],[15,null],[1,null],[1,null],[0,"_StencilRef"],[255,null],[255,null],[[0,null],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[["SHADOWS_DEPTH"],0],[["SHADOWS_CUBE"],0]],[[1,0,["SHADOWS_DEPTH"],"\n#version 100\n\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat1.x = unity_LightShadowBias.x \/ u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat4 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat4);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat4) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat4;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.z = 0.0;\n    vs_TEXCOORD1.w = in_COLOR0.w;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump float _Cutoff;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nbool u_xlatb0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD1.xy).w;\n    u_xlat0 = u_xlat10_0 * vs_TEXCOORD1.w + (-_Cutoff);\n    u_xlatb0 = u_xlat0<0.0;\n    if(u_xlatb0){discard;}\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n",0,0],[1,0,["SHADOWS_DEPTH"],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TEXCOORD0;\nin highp vec4 in_COLOR0;\nout highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat1.x = unity_LightShadowBias.x \/ u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat4 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat4);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat4) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat4;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.z = 0.0;\n    vs_TEXCOORD1.w = in_COLOR0.w;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump float _Cutoff;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD1;\nlayout(location = 0) out highp vec4 SV_Target0;\nfloat u_xlat0;\nmediump float u_xlat16_0;\nbool u_xlatb0;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD1.xy).w;\n    u_xlat0 = u_xlat16_0 * vs_TEXCOORD1.w + (-_Cutoff);\n    u_xlatb0 = u_xlat0<0.0;\n    if(u_xlatb0){discard;}\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n",1,0]],[],0]],[],[["_Color",0,1,1,1,1,"",0],["_MainTex",4,0,0,0,0,"black",4],["_StraightAlphaInput",2,0,0,0,0,"",0],["_Cutoff",3,0.100000001490116,0,1,0,"",0],["_StencilRef",2,1,0,0,0,"",1],["_StencilComp",2,8,0,0,0,"",1],["_OutlineWidth",3,3,0,8,0,"",1],["_UseScreenSpaceOutlineWidth",2,0,0,0,0,"",1],["_OutlineColor",0,1,1,0,1,"",1],["_Fill",2,0,0,0,0,"",1],["_OutlineReferenceTexWidth",2,1024,0,0,0,"",1],["_ThresholdEnd",3,0.25,0,1,0,"",1],["_OutlineSmoothness",3,1,0,1,0,"",1],["_Use8Neighbourhood",2,1,0,0,0,"",1],["_OutlineOpaqueAlpha",3,1,0,1,0,"",1],["_OutlineMipLevel",3,0,0,3,0,"",1]],null,null,0,0,0]}